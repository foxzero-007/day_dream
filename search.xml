<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python实现词频分析和词云生成</title>
      <link href="/daydream/2020/11/11/Python%E5%AE%9E%E7%8E%B0%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90%E5%92%8C%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90/"/>
      <url>/daydream/2020/11/11/Python%E5%AE%9E%E7%8E%B0%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90%E5%92%8C%E8%AF%8D%E4%BA%91%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>由于建模需要，博主简单学习了词频分析和词云生成，本博客仅适用于初学者第一次使用来借鉴</p><span id="more"></span><h1 id="Python实现词频分析和词云生成"><a href="#Python实现词频分析和词云生成" class="headerlink" title="Python实现词频分析和词云生成"></a>Python实现词频分析和词云生成</h1><p><em>1. 词频分析</em></p><p><strong>词频分析：</strong>所谓词频分析就是对一篇文章中的高频词语进行列举并计数</p><p><strong>实现方式：</strong>调用nltk的库，对.txt文本进行操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> nltk</span><br><span class="line"><span class="keyword">from</span> nltk.tokenize <span class="keyword">import</span> word_tokenize</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">stop_words = nltk.corpus.stopwords.words(<span class="string">&#x27;english&#x27;</span>)</span><br><span class="line"><span class="comment">#stop_words调用nltk预先定义好的不需要统计的词语字典</span></span><br><span class="line">newStopWords = [<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;It&#x27;</span>,<span class="string">&#x27;The&#x27;</span>,<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;use&#x27;</span>,<span class="string">&#x27;this&#x27;</span>,<span class="string">&#x27;They&#x27;</span>,<span class="string">&#x27;Im&#x27;</span>,<span class="string">&#x27;If&#x27;</span>,<span class="string">&#x27;So&#x27;</span>,<span class="string">&#x27;But&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;us&#x27;</span>,<span class="string">&#x27;My&#x27;</span>,\</span><br><span class="line">                <span class="string">&#x27;This&#x27;</span>,<span class="string">&#x27;We&#x27;</span>,<span class="string">&#x27;These&#x27;</span>,<span class="string">&#x27;You&#x27;</span>,<span class="string">&#x27;For&#x27;</span>,<span class="string">&#x27;She&#x27;</span>,<span class="string">&#x27;He&#x27;</span>,<span class="string">&#x27;Yet&#x27;</span>,<span class="string">&#x27;As&#x27;</span>]</span><br><span class="line"><span class="comment">#newStopWords定义不需要筛选的词语</span></span><br><span class="line">stop_words.extend(newStopWords)</span><br><span class="line"><span class="comment">#将不需要统计的词语添加到nltk的stopwords字典中</span></span><br><span class="line"><span class="built_in">list</span> = os.listdir(<span class="string">&#x27;C:/Users/25496/Desktop/建模/原文&#x27;</span>)</span><br><span class="line"><span class="comment">#list声明需要进行词频统计的文章的存储路径（本脚本会将该路径下所有的文档进行词频统计）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="keyword">for</span> content <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;C:/Users/25496/Desktop/建模/原文/&#x27;</span>+content, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 读取文件中的字符串</span></span><br><span class="line">        txt = f.read()</span><br><span class="line">        <span class="comment"># 去除字符串中的标点、数字等</span></span><br><span class="line">        txt = re.sub(<span class="string">&#x27;[,\.()&quot;:;!@#$%^&amp;*\d]|\&#x27;s|\&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, txt)</span><br><span class="line">        <span class="comment"># 替换换行符，大小写转换，拆分成单词列表</span></span><br><span class="line">        word_list = txt.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27; &#x27;</span>).replace(<span class="string">&#x27;  &#x27;</span>, <span class="string">&#x27; &#x27;</span>).lower().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        word_tokens = word_tokenize(txt)</span><br><span class="line">        filtered_sentence = []</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> word_tokens:</span><br><span class="line">            <span class="keyword">if</span> w <span class="keyword">not</span> <span class="keyword">in</span> stop_words:</span><br><span class="line">                filtered_sentence.append(w)</span><br><span class="line">        word_count_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> filtered_sentence:</span><br><span class="line">            <span class="comment"># 统计字典中的词频</span></span><br><span class="line">            <span class="keyword">if</span> word <span class="keyword">in</span> word_count_dict.keys():</span><br><span class="line">                word_count_dict[word] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                word_count_dict[word] = <span class="number">1</span></span><br><span class="line">        <span class="comment"># 按照单词出现次数排序</span></span><br><span class="line">        word_count_dict = <span class="built_in">sorted</span>(word_count_dict.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 输出到文件（如果是多个文件会输出到同一目录下）</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;C:/Users/25496/Desktop/建模/结果/result_&quot;</span>+content, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)<span class="keyword">as</span> f1:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> word_count_dict:</span><br><span class="line">                f1.write(<span class="string">&quot;%s\t%s\n&quot;</span> % (i[<span class="number">0</span>], <span class="built_in">str</span>(i[<span class="number">1</span>])))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>结果示例：</strong></p><p><img src="https://i.loli.net/2020/11/15/rGPLfI2kbosRc5i.png" alt="image-20201115181240603"></p><p><strong>容易出现的问题：</strong></p><p>导nltk的数据包报错</p><p>在安装nltk的包之后我们还需要去安装nltk的数据包，至于缺少的数据包，这里作者建议各位在调试上述程序运行时的报错信息来确认缺少的数据包，下载时可以在python控制台输入如下指令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一种：图形用户界面,这种方式会生成一个图形用户界面，用户根据自己的需求来下载需要的数据包</span></span><br><span class="line">nltk.download()</span><br><span class="line"><span class="comment">#第二种：命令行下载</span></span><br><span class="line">nltk.download(<span class="string">&#x27;【包名】&#x27;</span>)</span><br></pre></td></tr></table></figure><p>常有报错：</p><p>（本机积极拒绝等。。。）这种问题出现的原因作者也出现了，多试几次之后莫名其妙就成功了。</p><p><em>2.词云生成</em></p><p><strong>词云：</strong>如各位所见就是由多个词汇组合而成的一种图片，适合在各种场合使用</p><p><img src="https://i.loli.net/2020/11/15/PvGgbCzn4tMo7eH.png" alt="img_pacifier_total.txt"></p><p><strong>实现方式：</strong>调用wordcloud库（这个库好像需要matlab的库作为依赖）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">#list定义了需要做词频分析的文件的存储路径</span></span><br><span class="line"><span class="built_in">list</span> = os.listdir(<span class="string">&#x27;C:/Users/25496/Desktop/建模/原文&#x27;</span>)</span><br><span class="line"><span class="comment">#mask定义了一个图形蒙版</span></span><br><span class="line">mask = np.array(image.<span class="built_in">open</span>(<span class="string">&quot;C:/Users/25496/Desktop/建模/模板/timg.jpg&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> content <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;C:/Users/25496/Desktop/建模/原文/&#x27;</span> + content,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        text = fp.read()</span><br><span class="line">    <span class="comment"># print(text)</span></span><br><span class="line">        <span class="comment">#生成词云</span></span><br><span class="line">        wordcloud = WordCloud(background_color=<span class="string">&quot;white&quot;</span>,mask=mask).generate(text)</span><br><span class="line">        wordcloud.to_file(<span class="string">&quot;C:/Users/25496/Desktop/建模/词云/img_&quot;</span>+content+<span class="string">&quot;.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>WordCloud（）方法内置的一些属性：</strong></p><p>该方法可用来定义词云的基本属性</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">width</td><td align="center"><strong>指定词云对象生成图片的宽度，默认400像素</strong></td></tr><tr><td align="center">height</td><td align="center"><strong>指定词云对象生成图片的高度，默认200像素</strong></td></tr><tr><td align="center">min_font_size</td><td align="center"><strong>指定词云中字体的最小字号，默认4号</strong></td></tr><tr><td align="center">max_font_size</td><td align="center"><strong>指定词云中字体的最大字号，根据高度自动调节</strong></td></tr><tr><td align="center">font_step</td><td align="center"><strong>指定词云中字体字号的步进间隔，默认为1</strong></td></tr><tr><td align="center">font_path</td><td align="center"><strong>指定字体文件的路径，默认None</strong></td></tr><tr><td align="center">max_words</td><td align="center"><strong>指定词云显示的最大单词数量，默认200</strong></td></tr><tr><td align="center">stop_words</td><td align="center"><strong>指定词云的排除词列表，即不显示的单词列表</strong></td></tr><tr><td align="center">mask</td><td align="center"><strong>指定词云形状，默认为长方形，需要指定mask</strong></td></tr><tr><td align="center">background_color</td><td align="center"><strong>指定词云图片的背景颜色，默认为黑色</strong></td></tr></tbody></table><p><strong>mask要求：</strong>作为蒙版，需要是白底的图片，词云将会以图片深色部分作为轮廓生成</p>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> nltk </tag>
            
            <tag> wordcloud </tag>
            
            <tag> Python数据分析 </tag>
            
            <tag> 建模 </tag>
            
            <tag> 词频分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/daydream/2020/10/16/hello-world/"/>
      <url>/daydream/2020/10/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo初始化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hallo World ! </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零散学习日记1</title>
      <link href="/daydream/2020/09/05/Day01%202020.9.6%20%20%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B01/"/>
      <url>/daydream/2020/09/05/Day01%202020.9.6%20%20%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<p>博主比较懒也比较菜，学习日记这种东西更新绝对不会太频繁！</p><span id="more"></span><h1 id="Day01-2020-9-6-学习日记1"><a href="#Day01-2020-9-6-学习日记1" class="headerlink" title="Day01 2020.9.6  学习日记1"></a>Day01 2020.9.6  学习日记1</h1><ol><li><p>role属性</p><ul><li>role属性的作用是告诉Accesibility类应用（如屏幕阅读器等）当前元素的作用，可以增强文本的可读性和语义化</li><li>在Html5元素内，标签本身就是有语义的，因此role可以作为可选属性使用，但类似于Bootstrap中都很重视类似的属性和声明，目的是为了兼容老版浏览器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--role属性的使用--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--标明页面容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">role</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">role</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--标明该处是导航--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--标明页面主体--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span>text<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span>&gt;</span>example<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">role</span> =<span class="string">&quot;complementary&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">role</span> =<span class="string">&quot;complementary&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">role</span>=<span class="string">&quot;contentinfo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义图标的方法</p><ul><li>图标：在网页导航栏中显示的网页标签中文字前方的图标</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--首先准备一张16*16px的图标（网页专用）--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在HTML5文档中输入如下代码即可--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>流的定义</p><ul><li>流表示图表，照片，图形，插图，代码片段等独立的内容，在HTML5之前没有专门实现这个目的的元素，一些开发人员使用没有语义的div元素来表示</li><li>HTML5使用figure和figcaption引入流，其中figcaption表示流的标题，流的标题不是必须的，但如果包含它，就必须是figure内嵌的第一个或者最后一个元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>XXXXXXXX<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>picture标签及响应式效果的实现</p><ul><li><p>picture标签属性：</p><ol><li>srcset：必需，设置图片文件路径，如“srcset=”img/minpic.png””，或者是用逗号分隔的用像素密度描述的图片路径，如“srcset=”img/minpic.png,img/maxpic.png 2x””</li><li><em>media</em> ：设置媒体查询，如media=”(min-width:320px)”</li><li>sizes:设置宽度，如sizes=”100vw”，或是媒体查询宽度，如sizes=”(min-width:320px) 100vw”,可用逗号分隔形成媒体查询宽度列表</li><li>type：设置MIME类型，如type=”image/webp”或者type=”image/vnd.ms-photo”</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(min-width:650px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;images/kitten-large.png&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(min-width:456px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;images/kitten-medium.png&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--img标签用于不支持picture元素的浏览器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/kitten-small.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;a cute kitten&quot;</span> <span class="attr">id</span>=<span class="string">&quot;picimg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 零散 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql指令(不定时更新)</title>
      <link href="/daydream/2020/09/05/Mysql%E6%8C%87%E4%BB%A4%EF%BC%88%E8%BE%B9%E5%AD%A6%E8%BE%B9%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/daydream/2020/09/05/Mysql%E6%8C%87%E4%BB%A4%EF%BC%88%E8%BE%B9%E5%AD%A6%E8%BE%B9%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>更新全凭心情，学习时间随机</p><span id="more"></span><h1 id="Mysql指令（边学边更新）"><a href="#Mysql指令（边学边更新）" class="headerlink" title="Mysql指令（边学边更新）"></a>Mysql指令（边学边更新）</h1><ol><li><p>安装服务： mysqld –install</p></li><li><p>初始化：mysqld –initialize –console</p></li><li><p>开启服务：net start mysql</p></li><li><p>关闭服务：net stop mysql</p></li><li><p>登录mysql：mysql -u root -p</p><p>​    Enter PassWord：（密码）</p></li><li><p> 修改密码：alter user ‘root’@’localhost’ identified by ‘root’</p></li><li><p> 标记删除mysql服务：sc delete mysql</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web后端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 后端 </tag>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python+opencv自学笔记（1）</title>
      <link href="/daydream/2020/06/05/python+opencv%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/"/>
      <url>/daydream/2020/06/05/python+opencv%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="python-opencv自学笔记（1）"><a href="#python-opencv自学笔记（1）" class="headerlink" title="python+opencv自学笔记（1）"></a>python+opencv自学笔记（1）</h1><h2 id="读取图像"><a href="#读取图像" class="headerlink" title="读取图像"></a><em>读取图像</em></h2><p>示例：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line">src=cv.imread(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">cv.namedWindow(<span class="string">&#x27;input_image&#x27;</span>, cv.WINDOW_AUTOSIZE)</span><br><span class="line">cv.imshow(<span class="string">&#x27;input_image&#x27;</span>, src)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br><span class="line">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure><ul><li><h3 id="cv-imread-方法"><a href="#cv-imread-方法" class="headerlink" title="cv.imread()方法"></a><code>cv.imread()</code>方法</h3></li></ul><p><em>参数：</em></p><p><code>cv.imread(&#39;path&#39;)</code></p><p><em>作用：</em></p><p>读取path路径下的图片（<strong>注意：path要为绝对路径且保证全英文</strong>）</p><ul><li><h3 id="cv-namedWidow-方法"><a href="#cv-namedWidow-方法" class="headerlink" title=" cv.namedWidow()方法"></a><code> cv.namedWidow()</code>方法</h3></li></ul><p><em>参数：</em></p><p><code>cv.namedWindow(&#39;image&#39;,cv.Window_AUUTOSIZE)</code></p><p><em>作用：</em></p><p>用于创建一个窗口，第一个参数为窗口的名称，第二个参数则是窗口的属性（可以省略，默认值为cv.WINDOW_AUTOSIZE）</p><ul><li><h3 id="cv-imshow-方法"><a href="#cv-imshow-方法" class="headerlink" title="cv.imshow()方法"></a><code>cv.imshow()</code>方法</h3></li></ul><p><em>参数：</em></p><p><code>cv.imshow(&#39;image&#39;,src)</code></p><p><em>作用：</em></p><p>在指定的窗口显示一副图像，第一个参数是窗口名称，第二个参数是图片对象</p><p>（<strong>注意：该方法可与上文中cv.namedWindow()联合使用，指定窗口的属性，然后在窗口中显示图片</strong>）</p><ul><li><h3 id="cv-waitKey-方法"><a href="#cv-waitKey-方法" class="headerlink" title=" cv.waitKey()方法"></a><code> cv.waitKey()</code>方法</h3></li></ul><p><em>参数：</em></p><p><code>cv.waitKey(0)</code></p><p>参数=0：（<em>可以是小于0的数值</em>）一直显示，无返回值  ，如果在键盘上按某个键会消失，则返回值为该按键对应的ascii码</p><p>参数&gt;=0： 该参数表示显示多少毫秒   超过该时间则返回-1</p><ul><li><h3 id="cv-destroyAllWindows"><a href="#cv-destroyAllWindows" class="headerlink" title="cv.destroyAllWindows()"></a><code>cv.destroyAllWindows()</code></h3></li></ul><p><em>参数：</em></p><p>无参数</p><p><em>作用：</em></p><p>删除建立的全部窗口（<strong>注意：该删除并非是指关闭显示出来的窗口，而是删除创建窗口所占用的内存</strong>），释放资源</p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
